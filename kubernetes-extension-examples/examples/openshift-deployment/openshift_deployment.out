# Build the ballerina program
$ ballerina build openshift_deployment.bal
Compiling source
    openshift_deployment.bal
Generating executable
    openshift_deployment.balx

	@kubernetes:Service 			 - complete 1/1
	@kubernetes:Deployment 			 - complete 1/1
	@kubernetes:Docker 			 - complete 3/3
	@kubernetes:Helm 			 - complete 1/1
	@openshift:BuildConfig 			 - complete 1/1
	@openshift:ImageStream 			 - complete 1/1
	@openshift:Route 			 - complete 1/1

	Run the following command to deploy the OpenShift artifacts:
	oc apply -f ./kubernetes/openshift

	Run the following command to start a build:
	oc start-build bc/openshift-openshift-bc-openshift-bc --from-dir=. --follow

	Run the following command to deploy the Kubernetes artifacts:
	kubectl apply -f ./kubernetes

# Create a new OpenShift project
$ oc new-project hello-api

# Deploy the OpenShift artifacts
$ oc apply -f ./kubernetes/openshift
buildconfig.build.openshift.io/openshift-openshift-bc-openshift-bc created
imagestream.image.openshift.io/hello-service created
route.route.openshift.io/helloep-openshift-route created

# Trigger a build to create the Docker image
$ oc start-build bc/openshift-openshift-bc-openshift-bc --from-dir=. --follow
Uploading directory "." as binary input for the build ...

Uploading finished
build.build.openshift.io/openshift-openshift-bc-openshift-bc-4 started
Receiving source from STDIN as archive ...
Step 1/7 : FROM ballerina/ballerina-runtime:0.990.4-SNAPSHOT
 ---> 1a797b254523
Step 2/7 : LABEL maintainer "dev@ballerina.io"
 ---> Using cache
 ---> 74344a06d91c
Step 3/7 : COPY openshift_deployment.balx /home/ballerina
 ---> dd86747d6de3
Removing intermediate container 6de25c436216
Step 4/7 : EXPOSE 9090
 ---> Running in 6f28d0d89b6a
 ---> abe0325ea301
Removing intermediate container 6f28d0d89b6a
Step 5/7 : CMD ballerina run  openshift_deployment.balx
 ---> Running in 86b858a53fca
 ---> 43014797f865
Removing intermediate container 86b858a53fca
Step 6/7 : ENV "OPENSHIFT_BUILD_NAME" "openshift-openshift-bc-openshift-bc-4" "OPENSHIFT_BUILD_NAMESPACE" "hello-api"
 ---> Running in e82becaca413
 ---> 933c04628d72
Removing intermediate container e82becaca413
Step 7/7 : LABEL "io.openshift.build.name" "openshift-openshift-bc-openshift-bc-4" "io.openshift.build.namespace" "hello-api"
 ---> Running in c1ef500f8acc
 ---> d4d7a09a9092
Removing intermediate container c1ef500f8acc
Successfully built d4d7a09a9092
Pushing image 172.30.1.1:5000/hello-api/hello-service:v1.0 ...
Push successful

# Deploy the Kubernetes artifacts
$ kubectl apply -f ./kubernetes
service/helloep-svc created
deployment.apps/openshift-deployment-deployment created

# Check if pods are running
$ oc get pods
NAME                                               READY     STATUS      RESTARTS   AGE
openshift-deployment-deployment-865d564bc9-5rh78   1/1       Running     0          35m

# Invoke the service. If you are using minikube, go to www.oc-example.com to get the minikube IP. Use the `minikube ip` command to find the IP.
$ curl --resolve www.oc-example.com:80:192.168.99.101 http://www.oc-example.com/hello/john
Hello john!
